"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showPopup = void 0;
var React = require("react");
var ReactDOM = require("react-dom");
/** @hidden @internal */
function showPopup(layoutDiv, triggerElement, items, onSelect, classNameMapper) {
    var currentDocument = triggerElement.ownerDocument;
    var triggerRect = triggerElement.getBoundingClientRect();
    var layoutRect = layoutDiv.getBoundingClientRect();
    var elm = currentDocument.createElement("div");
    elm.className = classNameMapper("flexlayout__popup_menu_container");
    if (triggerRect.left < layoutRect.left + layoutRect.width / 2) {
        elm.style.left = triggerRect.left - layoutRect.left + "px";
    }
    else {
        elm.style.right = layoutRect.right - triggerRect.right + "px";
    }
    if (triggerRect.top < layoutRect.top + layoutRect.height / 2) {
        elm.style.top = triggerRect.top - layoutRect.top + "px";
    }
    else {
        elm.style.bottom = layoutRect.bottom - triggerRect.bottom + "px";
    }
    layoutDiv.appendChild(elm);
    var onHide = function () {
        layoutDiv.removeChild(elm);
        ReactDOM.unmountComponentAtNode(elm);
        elm.removeEventListener("mouseup", onElementMouseUp);
        currentDocument.removeEventListener("mouseup", onDocMouseUp);
    };
    var onElementMouseUp = function (event) {
        event.stopPropagation();
    };
    var onDocMouseUp = function (event) {
        onHide();
    };
    elm.addEventListener("mouseup", onElementMouseUp);
    currentDocument.addEventListener("mouseup", onDocMouseUp);
    ReactDOM.render(React.createElement(PopupMenu, { currentDocument: currentDocument, onSelect: onSelect, onHide: onHide, items: items, classNameMapper: classNameMapper }), elm);
}
exports.showPopup = showPopup;
/** @hidden @internal */
var PopupMenu = function (props) {
    var items = props.items, onHide = props.onHide, onSelect = props.onSelect, classNameMapper = props.classNameMapper;
    var onItemClick = function (item, event) {
        onSelect(item);
        onHide();
        event.stopPropagation();
    };
    var itemElements = items.map(function (item) { return (React.createElement("div", { key: item.index, className: classNameMapper("flexlayout__popup_menu_item"), onClick: function (event) { return onItemClick(item, event); } }, item.node._getRenderedName())); });
    return React.createElement("div", { className: classNameMapper("flexlayout__popup_menu") }, itemElements);
};
//# sourceMappingURL=PopupMenu.js.map